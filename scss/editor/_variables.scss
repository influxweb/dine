// This is the default html and body font-size for the base em value.
$base-font-size: 16px !default;

// Working in ems is annoying. Think in pixels by using this handy function, emCalc(#px)
@function emCalc($pxWidth) {
	@return $pxWidth / $base-font-size * 1em;
}

// Creating rems and pixels
@function remCalc($pxWidth) {
	@return $pxWidth / $base-font-size * 1rem;
}

// Grid Calculation for Percentages
@function gridCalc($colNumber, $totalColumns) {
	@return percentage(($colNumber / $totalColumns));
}

// 12px of padding as a base (same as grid gutters)
$base-padding: emCalc(24px)/2 !default;

// Mixins for media queries
$width-small: emCalc(480px) !default;
$width-medium: emCalc(768px) !default;
$width-desktop: emCalc(960px) !default;
$width-wide: emCalc(1440px) !default;

$small: "only screen and (min-width:"#{$width-small}")" !default;
$medium: "only screen and (min-width:"#{$width-medium}")" !default;
$desktop: "only screen and (min-width:"#{$width-desktop}")" !default;
$wide: "only screen and (min-width:"#{$width-wide}")" !default;


// Put all colours here - override for theme
$color-base-font: #444;
$color-off-white: #f7f7f7;
$color-light-grey: #ddd;
$color-dark: #333;
$color-off-black: #111;
$color-blue: #1BA1C4;
$color-purple: #5d1f6a;
$color-mute: #999;
$color-dark-brown: #1B140E;
$color-dark-blue: #012a48;

$color-red: #a11717;
$color-green2: #40AC5A;
$color-green: #527e3e;

$color-facebook-blue: #3b5997;
$color-twitter-blue: #32ccfe;
$color-googleplus-red: #f23c26;

$base-font-family: "Open Sans", sans-serif;

$light: 200;
$normal: 300;
$bold: 700;
$black: 900;

$font-size-small: 14px;
$font-size-large: 20px;


$include-html-grid-classes: true !default;
$include-html-form-classes: true !default;


// We use this to do clear floats
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}
.clear {clear:both;}

$default-float: left !default;
$default-opposite: right !default;


@mixin box-sizing($type:border-box) {
  -moz-box-sizing: $type;
  -webkit-box-sizing: $type;
  box-sizing: $type;
}

// Set box-sizing globally to handle padding and border widths
*,
*:before,
*:after {
	@include box-sizing(border-box);
}

// Used to reset horizonal lists
@mixin navigation-list {
    list-style-type:none;
    padding:0;
    margin:0;
    overflow:hidden;
    > li{
        display:block;
        float:left;
        &:last-child{
            margin-right:0px;
        }
    }
}

@mixin blank-list {
    list-style-type:none;
    padding:0;
    margin:0;
    overflow:hidden;
    > li{
        display:block;
    }
}


@mixin linear-gradient($from, $to, $ie: $useIEFilters, $mid: $to, $midPercent: 100%) {
  @if $ie != 1 { background-color: $to; }
  @if $ie != 1 { background-color: $to; }
  
  background-image: -webkit-gradient(linear,left top,left bottom,color-stop(0, $from),color-stop($midPercent, $mid),color-stop(100%, $to));
  background-image: -webkit-linear-gradient(top, $from 0%, $mid $midPercent, $to 100%);
  background-image: -moz-linear-gradient(top, $from 0%, $mid $midPercent, $to 100%);
  background-image: -ms-linear-gradient(top, $from 0%, $mid $midPercent, $to 100%);
  background-image: -o-linear-gradient(top, $from 0%, $mid $midPercent, $to 100%);
  background-image: linear-gradient(top bottom, $from 0%, $mid $midPercent, $to 100%);
  
  @if $ie == 1 { 
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
    -ms-filter: quote(progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}'));
  }
}



